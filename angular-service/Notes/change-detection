This is a summary about angular change detection. So, we have two types of angular change detection. One is on-default and on-push. So, let's say an example about on-default. When there is a component called AppComponent, which is a root component, passes the data to a child component through attribute binding, if there is a change in the AppComponent source data through some event triggers or through some service calls to make the changes, it will be reflected in the child component without explicitly defining any codes. So, this is the default behavior of change detection strategy on-default. When we go for on-push, so if there is a change in the root component called AppComponent.ts source array or object, the child component won't get reflected the changes which has happened in the root component since we are using on-push strategy in the child component. We can do it explicitly using change detection methods like DetectChanges or MarkForCheck to detect the changes explicitly. Or we can trigger an event in the child component. Any kind of event is triggered. It will detect the changes in the source array of AppComponent and renders the new data. You don't have to call explicitly change detection tool. You just run any kind of event that will detect the changes.If the root component has onpush strategy if there is change in the component source array it will be refelected only through events. other wise we have to call the changeDetection or any events to trigger reflect the changes .


